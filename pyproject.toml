[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "pytest_check_links"
dynamic = ["version"]
description = "Check links in files"
license = { file = "LICENSE" }
classifiers = [
  "Framework :: Jupyter",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Documentation",
  "Topic :: Documentation :: Sphinx",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
]
keywords = ["testing", "documentation", "links", "html"]
requires-python = ">=3.7"
dependencies = [
  "docutils",
  "html5lib",
  "nbconvert",
  "nbformat",
  "pytest >= 7.0",
  "requests",
]

[[project.authors]]
name = "Jupyter Development Team"
email = "jupyter@googlegroups.com"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/jupyterlab/pytest-check-links"

[project.optional-dependencies]
cache = ["requests-cache~=0.5.2"]
test = ["requests-cache~=0.5.2", "pre-commit", "mistune<1;python_version<\"3.10\""]

[project.scripts]
pytest-check-links = "pytest_check_links.__main__:main"

[project.entry-points."pytest11"]
check-links = "pytest_check_links.plugin"

[tool.hatch.version]
path = "pytest_check_links/_version.py"


[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "python -m pytest -vv -W default {args}"

[tool.hatch.envs.cov]
features = ["test"]
dependencies = ["coverage", "pytest-cov"]
[tool.hatch.envs.cov.env-vars]
ARGS = "-vv --cov pytest_check_links --cov-branch --cov-report term-missing:skip-covered"
[tool.hatch.envs.cov.scripts]
test = "python -m pytest $ARGS --cov-fail-under 90 {args}"

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
filterwarnings = [
  "error",
]
pytester_example_dir = "examples"

[tool.mypy]
check_untyped_defs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
no_implicit_optional = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
exclude = [
    'setup.py'
]

[tool.flake8]
ignore = "E501, W503, E402"
builtins = "c, get_config"
exclude = [
    ".cache",
    ".github",
    "docs",
    "setup.py",
]
enable-extensions = "G"
extend-ignore = [
    "G001", "G002", "G004", "G200", "G201", "G202",
    # black adds spaces around ':'
    "E203",
]
per-file-ignores = [
    # B011: Do not call assert False since python -O removes these calls
    # F841 local variable 'foo' is assigned to but never used
    "test/*: B011", "F841",
]
